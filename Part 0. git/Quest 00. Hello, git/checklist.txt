
Q00
1. 버전 관리 시스템이 필요한 이유: 소스코드의 여러 버전을 동시에 관리함으로써 협업이 효율적으로 가능해지고, 로컬 뿐만 아니라 중앙에서도 코드를 관리함으로써 돌발 상황에도 안심하게 작업할 수 있다.

2. SVN 이라는 시스템이 존재한다. SVN은 중앙 저장소의 개념이 자신이 만든 기능을 공개한다는 뜻이 되기 때문에 자신 만의 version history를 가질 수 없고, commit 에 실수가 있을 때 다른 개발자에게 영향을 미치게 된다. 하지만 git은 서버 저장소와 개발자 저장소가 독립적으로 commit history를 가질 수 있기 때문에 소스를 매우 유연하게 운영할 수 있다. 따라서 git에서는 소스를 아주 다양하게 관리할 수 있다.

3. clone: 이미 존재하는 중앙 저장소의 소스 코드를 로컬로 가져올 때 사용, git clone 저장소 주소
add: 로컬에서 변경사항 저장, git add 파일이름
commit: 저장된 변경사항 커밋하여 중앙저장소에 올릴 준비를 함, git commit -m 메세지
push: 로컬의 커밋들을 중앙 저장소로 업로드, git push origin 브랜치 이름
pull: 중앙 저장소의 변경 사항 로컬로 업로드, git pull origin 브랜치 이름
branch: 로컬에서 브랜치 생성, git branch 브랜치 이름
stash: 커밋되지 않은 작업 내용을 임시로 저장(이상한 브랜치에서 작업하고 있을 때 브랜치 바꿀 때 유용), git stash / git stash pop
